version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: noshitai
      POSTGRES_PASSWORD: noshitai_password
      POSTGRES_DB: noshitai_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U noshitai"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://noshitai:noshitai_password@postgres:5432/noshitai_db
      REDIS_URL: redis://redis:6379
      SECRET_KEY: ${SECRET_KEY:-change-this-in-production}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_PRICE_ID: ${STRIPE_PRICE_ID}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./server:/app
    command: uvicorn app:app --host 0.0.0.0 --port 8000 --reload

  celery:
    build:
      context: ./server
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql://noshitai:noshitai_password@postgres:5432/noshitai_db
      REDIS_URL: redis://redis:6379
      SECRET_KEY: ${SECRET_KEY:-change-this-in-production}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./server:/app
    command: celery -A app.celery_app worker --loglevel=info

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    environment:
      VITE_API_URL: http://localhost:8000
      VITE_STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./client:/app
      - /app/node_modules
    command: npm run dev -- --host 0.0.0.0

volumes:
  postgres_data:
  redis_data: